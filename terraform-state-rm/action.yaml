name: 'Terraform State Remove'
description: 'Runs terraform state rm using resource address.'
inputs:
  ssh_key:
    description: '[secret] [required] GitHub SSH Key for pulling repo.'
    required: true
  terraform_version:
    description: '[decimal] [required] (e.g. 1.0.11) Terraform version to use.'
    required: true
  terraform_directory:
    description: '[decimal] [required] (e.g. preprod) Directory you will cd into before running Terraform.'
    required: false
  resource_address:
    description: "[resource_name] [required] (e.g. datadog_monitor.platform-browser-identity-status). Type and name of the resource that will be removed in dot notation."
    required: true
  terraform_workspace:
    description: "[terraform_workspace] [required] (e.g. ninja). TF Workspace name."
    required: true
  dry_run:
    description: "[dry_run] [required] (i.e. true/false). If you wish to skip updating the TF State File."
    required: true
    default: "true"

runs:
  using: "composite"
  steps:
    - name: Validate Inputs
      env:
        SSH_KEY: ${{ inputs.ssh_key }}
        TERRAFORM_VERSION: ${{ inputs.terraform_version }}
        RESOURCE_ADDRESS: ${{ inputs.resource_address }}
        DRY_RUN: ${{ inputs.dry_run }}
        TERRAFORM_WORKSPACE: ${{ inputs.terraform_workspace }}
      run: |
        cd ${{ github.action_path }}
        source ../shell-scripts/input-validator.sh

        declare -A inputs
        inputs[ssh_key]="$SSH_KEY"
        inputs[terraform_version]="$TERRAFORM_VERSION"
        inputs[resource_address]="$RESOURCE_ADDRESS"
        inputs[terraform_workspace]="$TERRAFORM_WORKSPACE"
        inputs[dry_run]="$DRY_RUN"

        validateInput inputs
      shell: bash
    - name: Install SSH Key
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ inputs.ssh_key }}
    - name: Pull
      uses: actions/checkout@v2
    - name: HashiCorp - Setup Terraform
      uses: hashicorp/setup-terraform@v1.2.1
      with:
        terraform_version: ${{ inputs.terraform_version }}
    - name: Initialize Terraform
      run: |
        if [ -n ${{ env.TERRAFORM_DIRECTORY }} ]
        then
          cd $TERRAFORM_DIRECTORY
        fi
        terraform version
        terraform init -lock=false
        if [ -n ${{ env.TERRAFORM_DIRECTORY }} ]
        then
          cd $TERRAFORM_DIRECTORY
        fi
        terraform workspace select ${{ inputs.terraform_workspace }}
      shell: bash
    - name: Dry Run
      if: ${{ inputs.dry_run == 'true' }}
      run: |
        terraform state rm -dry-run ${{ inputs.resource_address }}
      shell: bash
    - name: Update Terraform State File - If dry_run == 'false'
      if: ${{ inputs.dry_run == 'false' }}
      run: |
        terraform state rm ${{ inputs.resource_address }}
      shell: bash
