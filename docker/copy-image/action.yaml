name: "Docker Copy and Push"
description: "Copies an image from ghcr and pushes it to ecr"
inputs:
  process_name:
    description: "[string] Process name"
    required: true
  environment:
    description: "[string] Environment to push to (default, stage, prod)"
    required: true
  workspace:
    description: "[string] Terraform workspace to deploy the ecr image into"
    required: true
  ecr_image_version:
    description: "[string] ECR image version"
    required: true
  ghcr_image_version:
    description: "[string] GHCR image version"
    required: true
  aws_account_id:
    description: "[number] AWS account id to push the ECR image into"
    required: true
outputs:
  ECR_IMAGE_NAME:
    description: "[string] The name of the copied image into ecr"
    value: ${{ steps.image-name.outputs.ECR_IMAGE_NAME }}
  ECR_IMAGE_URI:
    description: "[string] Full uri with tag of the image uploaded to ecr"
    value: ${{ steps.image-uri.outputs.ECR_IMAGE_URI }}

runs:
  using: "composite"
  steps:
    - name: Validate Inputs
      env:
        process_name: ${{ inputs.process_name }}
        ENVIRONMENT: ${{ inputs.environment }}
        ECR_IMAGE_VERSION: ${{ inputs.ecr_image_version }}
        GHCR_IMAGE_VERSION: ${{ inputs.ghcr_image_version }}
        AWS_ACCOUNT_ID: ${{ inputs.aws_account_id }}
      run: |
        cd ${{ github.action_path }}
        source ../../shell-scripts/input-validator.sh

        declare -A inputs
        inputs[process_name]="$process_name"
        inputs[environment]="$ENVIRONMENT"
        inputs[ecr_image_version]="$ECR_IMAGE_VERSION"
        inputs[ghcr_image_version]="$GHCR_IMAGE_VERSION"
        inputs[aws_account_id]="$AWS_ACCOUNT_ID"

        validateInput inputs
      shell: bash

    - name: "Set image names"
      shell: bash
      id: image-name
      env:
        repo: ${{ github.repository }}
        environment: ${{ inputs.environment }}
        workspace: ${{ inputs.workspace }}
      run: |
        echo "GHCR_IMAGE_NAME=$repo/$environment" >> $GITHUB_ENV
        echo "ECR_IMAGE_NAME=$repo/$workspace" >> $GITHUB_ENV
        echo "ECR_IMAGE_NAME=$repo/$workspace" >> $GITHUB_OUTPUT

    # Switch to the target account to log into ecr and push
    - name: Configure AWS credentials for ${{ inputs.aws_account_id }} account
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ env.GH_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.GH_AWS_SECRET_KEY }}
        aws-region: us-west-2
        role-to-assume: arn:aws:iam::${{ inputs.aws_account_id }}:role/terraform-runnner-role
        role-duration-seconds: 3600 # 60 min
        role-skip-session-tagging: true

    - name: "Set image uris"
      id: image-uri
      shell: bash
      env:
        process_name: ${{ inputs.process_name }}
        ECR_IMAGE_VERSION: ${{ inputs.ecr_image_version }}
        GHCR_IMAGE_VERSION: ${{ inputs.ghcr_image_version }}
        ACCOUNT_ID: ${{ inputs.aws_account_id }}
      run: |
        ECR_TRIMMED_IMAGE_VERSION=$(echo $ECR_IMAGE_VERSION | tr / -)
        GHCR_TRIMMED_IMAGE_VERSION=$(echo $GHCR_IMAGE_VERSION | tr / -)
        echo "ECR_IMAGE_URI=$ACCOUNT_ID.dkr.ecr.us-west-2.amazonaws.com/$ECR_IMAGE_NAME:$process_name-$ECR_TRIMMED_IMAGE_VERSION" >> $GITHUB_ENV
        echo "ECR_IMAGE_URI=$ACCOUNT_ID.dkr.ecr.us-west-2.amazonaws.com/$ECR_IMAGE_NAME:$process_name-$ECR_TRIMMED_IMAGE_VERSION" >> $GITHUB_OUTPUT
        echo "GHCR_IMAGE_URI=ghcr.io/$GHCR_IMAGE_NAME:$process_name-$GHCR_TRIMMED_IMAGE_VERSION" >> $GITHUB_ENV

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ env.GITHUB_TOKEN }}

    - name: Login to ECR
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.aws_account_id }}.dkr.ecr.us-west-2.amazonaws.com

    # Pull image from GitHub, re-tag, and push to AWS ecr
    - name: Pull image from ghcr and push to ecr
      shell: bash
      run: |
        docker pull $GHCR_IMAGE_URI
        docker tag $GHCR_IMAGE_URI $ECR_IMAGE_URI
        docker push $ECR_IMAGE_URI

    - name: Configure AWS credentials for shared account
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ env.GH_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.GH_AWS_SECRET_KEY }}
        aws-region: us-west-2
